#include "Header.hpp"
using namespace std;

// 5. Модель, реализующая матрицу Якоби с заданными неоднородными граничными условиями 
// (матрица в начальный такт моделирования равна 0, 
// воздействие осуществляется от границ матрицы, 
// внешние воздействия являются вводимыми данными). 

int main(){

	int n; // количество измерений
	int *m; // количество точек по каждому из измерений
	double value; // величина внешнего воздействия
	int demo; // режим программы

	setlocale(LC_ALL, "Russian");

	cout << "\tМодель, реализующая матрицу Якоби с заданными неоднородными граничными условиями" << endl;
	cout << "\tВерсия Lite" << endl;

	cout << "\tВведите количество измерений:" << endl; cin >> n;

	m = new int[n];

	cout << "\tВведите количество точек по каждому из измерений m["<<n<<"]:" << endl;
	cout << "\tВНИМАНИЕ!!! количество точек == размер сетки + 1" << endl;
	for(int i = 0; i < n; i++)
		cin >> m[i];

	cout << "\tВведите величину внешнего воздействия:" << endl; cin >> value;

	cout << "\tДемонстрационный режим програмы (0 - замер времени, 1 - демонстрация работоспособности):" << endl; cin >> demo;

	clock_t t = clock();
	if(jacobi_field(n,m,value, demo)!=0) cout << "\tОшибка аллокирования памяти" << endl;
	t = clock()-t;

	double seconds = ((double)t)/CLOCKS_PER_SEC;
	cout << "\tВремя выполнения: " << seconds << "sec" << endl;

	delete m;

	getchar();
	getchar();

	return 0;
}

