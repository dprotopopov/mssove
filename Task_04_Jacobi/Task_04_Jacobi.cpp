#include "Header.hpp"
using namespace std;

// 4. ћодель, реализующа€ матрицу якоби с граничными услови€ми 
// (состо€ние пространства за пределом матрицы принимаетс€ равным 0):
// а) начальное воздействие прикладываетс€ к выбранной точке (координаты точки и величина воздействи€ €вл€ютс€ входными данными) и удерживаютс€ в течение всего времени моделировани€.
// б) начальное воздействие прикладываетс€ к выбранной точке (координаты точки и величина воздействи€ €вл€ютс€ входными данными) в первом такте моделировани€ и затем снимаетс€.

int main(){

	int n; // количество измерений
	int *m; // количество точек по каждому из измерений
	int *x; // вектор координат точки воздействи€
	double value; // величина воздействи€
	int mode; // режим
	int demo; // режим программы

	setlocale(LC_ALL, "Russian");

	cout << "\tћодель, реализующа€ матрицу якоби с граничными услови€ми" << endl;

	cout << "\t¬ведите количество измерений:" << endl; cin >> n;

	m = new int[n];
	x = new int[n];

	cout << "\t¬ведите количество точек по каждому из измерений m["<<n<<"]:" << endl;
	cout << "\t¬Ќ»ћјЌ»≈!!! количество точек == размер сетки + 1" << endl;
	for(int i = 0; i < n; i++)
		cin >> m[i];

	cout << "\t¬ведите координаты точки воздействи€ x["<<n<<"]:" << endl;
	for(int i = 0; i < n; i++)
		cin >> x[i];

	cout << "\t¬ведите величину воздействи€:" << endl; cin >> value;

	cout << "\t”кажите режим (0 - непреравное воздействе, 1 - однократное воздействие):" << endl; cin >> mode;

	cout << "\tƒемонстрационный режим програмы (0 - замер времени, 1 - демонстраци€ работоспособности):" << endl; cin >> demo;

	clock_t t = clock();
	if(jacobi_field(n,m,x,value,mode, demo)!=0) cout << "\tќшибка аллокировани€ пам€ти" << endl;
	t = clock()-t;

	double seconds = ((double)t)/CLOCKS_PER_SEC;
	cout << "\t¬рем€ выполнени€: " << seconds << "sec" << endl;

	delete m;
	delete x;

	getchar();
	getchar();

	return 0;
}

